// Mocks generated by Mockito 5.0.11 from annotations
// in places/test/core/features/places/domain/usercases/get_google_place_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:multiple_result/multiple_result.dart' as _i2;
import 'package:places/core/error/failures.dart' as _i5;
import 'package:places/features/places/domain/repositories/google_place_repository.dart'
    as _i3;
import 'package:places/googleapi/models/response/google_json_response.dart'
    as _i6;
import 'package:places/googleapi/models/types.dart' as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeResult<E, S> extends _i1.Fake implements _i2.Result<E, S> {}

/// A class which mocks [GooglePlaceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGooglePlaceRepository extends _i1.Mock
    implements _i3.GooglePlaceRepository {
  MockGooglePlaceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.Failure, _i6.GooglePlaceResponse>> getGooglePlace(
          _i7.PlaceType? type) =>
      (super.noSuchMethod(Invocation.method(#getGooglePlace, [type]),
          returnValue:
              Future<_i2.Result<_i5.Failure, _i6.GooglePlaceResponse>>.value(
                  _FakeResult<_i5.Failure, _i6.GooglePlaceResponse>())) as _i4
          .Future<_i2.Result<_i5.Failure, _i6.GooglePlaceResponse>>);
}
